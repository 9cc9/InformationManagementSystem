# encoding: utf-8
#####################################
# 项目资源处理类
#####################################
class ProjectsController < ApplicationController
  before_filter :authorize

  # 项目列表
  def index
    @projects = Project.all

    respond_to do |format|
      format.html # index.html.erb
      format.json { render :json => @projects }
    end
  end

  # 根据id显示对应项目详情
  def show
    @project = Project.find(params[:id])
    @student = @project.student
    @fund_management = @project.fund_management

    respond_to do |format|
      format.html # show.html.erb
      format.json { render :json => @project }
    end
  end

  # 创建新项目界面
  def new
    @project = Project.new
    @fund_management = FundManagement.new

    respond_to do |format|
      format.html # new.html.erb
      format.json { render :json => @project }
    end
  end

  # 根据用户输入信息创建新项目
  def create
    @project = Project.new(params[:project])
    @project.stage = "申请阶段"  # 新项目属于申请阶段
    @project.status = "待审核"

    @fund_management = FundManagement.new(params[:fund_management])
    respond_to do |format|
      if @project.save
        @fund_management.project_id = @project.id
        @fund_management.save
        format.html { redirect_to @project, :notice => 'Project was successfully created.' }
        format.json { render :json =>  @project, :status => :created, :location => @project }
      else
        format.html { render :action => "new" }
        format.json { render :json =>  @project.errors, :status => :unprocessable_entity }
      end
    end
  end

  # 修改项目界面
  def edit
    @project = Project.find(params[:id])
    @fund_management = @project.fund_management
  end

  # 根据用户输入信息更新界面
  def update
    @project = Project.find(params[:id])

    respond_to do |format|
      if @project.update_attributes(params[:project])
        @project.fund_management.update_attributes(params[:fund_management])
        format.html { redirect_to @project, :notice => 'Project was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render :action => "edit" }
        format.json { render :json =>  @project.errors, :status => :unprocessable_entity }
      end
    end
  end

  # 删除项目
  def destroy
    @project = Project.find(params[:id])
    @project.destroy

    respond_to do |format|
      format.html { redirect_to projects_url }
      format.json { head :no_content }
    end
  end
end
